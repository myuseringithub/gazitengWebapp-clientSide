"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.loadData = loadData;var _commonDatabaseFunctionality = require("utility/middleware/commonDatabaseFunctionality.js");

async function loadData({ targetProjectConfig, databaseData }) {
  let rethinkdbConnection = await (0, _commonDatabaseFunctionality.connect)(rethinkdbConfig);
  await loadDatabaseData({ databaseData });
  await loadFrontendData({ targetConfig, rethinkdbConnection });
}

async function loadFrontendData({ targetConfig, rethinkdbConnection }) {
  let getTableDocument = { generate: getTableDocumentDefault, instance: [] };
  getTableDocument.instance['template_documentFrontend'] = await getTableDocument.generate('webappSetting', 'template_documentFrontend');
  const documentFrontendData = await getTableDocument.instance['template_documentFrontend'](targetConfig.rethinkdbConnection);
  let defaultLanguage = 'English';
  let uiContent = await queryPatternImplementation({
    databaseConnection: rethinkdbConnection,
    languageDocumentKey: defaultLanguage,
    dataTableName: 'ui' });

  targetConfig.frontendStatic = {

    config: targetConfig,
    setting: {
      location: {
        routeBasePath: `${targetConfig.PROTOCOL}${targetConfig.HOST}`,
        cdnBasePath: targetConfig.extendedSubclass.static['StaticContent'].url },

      mode: {

        language: defaultLanguage } },


    route: 'route',
    document: documentFrontendData };


}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3Jlc291cmNlL2xvYWREYXRhLmpzIl0sIm5hbWVzIjpbImxvYWREYXRhIiwidGFyZ2V0UHJvamVjdENvbmZpZyIsImRhdGFiYXNlRGF0YSIsInJldGhpbmtkYkNvbm5lY3Rpb24iLCJyZXRoaW5rZGJDb25maWciLCJsb2FkRGF0YWJhc2VEYXRhIiwibG9hZEZyb250ZW5kRGF0YSIsInRhcmdldENvbmZpZyIsImdldFRhYmxlRG9jdW1lbnQiLCJnZW5lcmF0ZSIsImdldFRhYmxlRG9jdW1lbnREZWZhdWx0IiwiaW5zdGFuY2UiLCJkb2N1bWVudEZyb250ZW5kRGF0YSIsImRlZmF1bHRMYW5ndWFnZSIsInVpQ29udGVudCIsInF1ZXJ5UGF0dGVybkltcGxlbWVudGF0aW9uIiwiZGF0YWJhc2VDb25uZWN0aW9uIiwibGFuZ3VhZ2VEb2N1bWVudEtleSIsImRhdGFUYWJsZU5hbWUiLCJmcm9udGVuZFN0YXRpYyIsImNvbmZpZyIsInNldHRpbmciLCJsb2NhdGlvbiIsInJvdXRlQmFzZVBhdGgiLCJQUk9UT0NPTCIsIkhPU1QiLCJjZG5CYXNlUGF0aCIsImV4dGVuZGVkU3ViY2xhc3MiLCJzdGF0aWMiLCJ1cmwiLCJtb2RlIiwibGFuZ3VhZ2UiLCJyb3V0ZSIsImRvY3VtZW50Il0sIm1hcHBpbmdzIjoidUdBQUE7O0FBRU8sZUFBZUEsUUFBZixDQUF3QixFQUFFQyxtQkFBRixFQUF1QkMsWUFBdkIsRUFBeEIsRUFBK0Q7QUFDcEUsTUFBSUMsbUJBQW1CLEdBQUcsTUFBTSwwQ0FBUUMsZUFBUixDQUFoQztBQUNBLFFBQU1DLGdCQUFnQixDQUFDLEVBQUVILFlBQUYsRUFBRCxDQUF0QjtBQUNBLFFBQU1JLGdCQUFnQixDQUFDLEVBQUVDLFlBQUYsRUFBZ0JKLG1CQUFoQixFQUFELENBQXRCO0FBQ0Q7O0FBRUQsZUFBZUcsZ0JBQWYsQ0FBZ0MsRUFBRUMsWUFBRixFQUFnQkosbUJBQWhCLEVBQWhDLEVBQXVFO0FBQ3JFLE1BQUlLLGdCQUFnQixHQUFHLEVBQUVDLFFBQVEsRUFBRUMsdUJBQVosRUFBcUNDLFFBQVEsRUFBRSxFQUEvQyxFQUF2QjtBQUNBSCxFQUFBQSxnQkFBZ0IsQ0FBQ0csUUFBakIsQ0FBMEIsMkJBQTFCLElBQXlELE1BQU1ILGdCQUFnQixDQUFDQyxRQUFqQixDQUEwQixlQUExQixFQUEyQywyQkFBM0MsQ0FBL0Q7QUFDQSxRQUFNRyxvQkFBb0IsR0FBRyxNQUFNSixnQkFBZ0IsQ0FBQ0csUUFBakIsQ0FBMEIsMkJBQTFCLEVBQXVESixZQUFZLENBQUNKLG1CQUFwRSxDQUFuQztBQUNBLE1BQUlVLGVBQWUsR0FBRyxTQUF0QjtBQUNBLE1BQUlDLFNBQVMsR0FBRyxNQUFNQywwQkFBMEIsQ0FBQztBQUMvQ0MsSUFBQUEsa0JBQWtCLEVBQUViLG1CQUQyQjtBQUUvQ2MsSUFBQUEsbUJBQW1CLEVBQUVKLGVBRjBCO0FBRy9DSyxJQUFBQSxhQUFhLEVBQUUsSUFIZ0MsRUFBRCxDQUFoRDs7QUFLQVgsRUFBQUEsWUFBWSxDQUFDWSxjQUFiLEdBQThCOztBQUU1QkMsSUFBQUEsTUFBTSxFQUFFYixZQUZvQjtBQUc1QmMsSUFBQUEsT0FBTyxFQUFFO0FBQ1BDLE1BQUFBLFFBQVEsRUFBRTtBQUNSQyxRQUFBQSxhQUFhLEVBQUcsR0FBRWhCLFlBQVksQ0FBQ2lCLFFBQVMsR0FBRWpCLFlBQVksQ0FBQ2tCLElBQUssRUFEcEQ7QUFFUkMsUUFBQUEsV0FBVyxFQUFFbkIsWUFBWSxDQUFDb0IsZ0JBQWIsQ0FBOEJDLE1BQTlCLENBQXFDLGVBQXJDLEVBQXNEQyxHQUYzRCxFQURIOztBQUtQQyxNQUFBQSxJQUFJLEVBQUU7O0FBRUpDLFFBQUFBLFFBQVEsRUFBRWxCLGVBRk4sRUFMQyxFQUhtQjs7O0FBYTVCbUIsSUFBQUEsS0FBSyxFQUFFLE9BYnFCO0FBYzVCQyxJQUFBQSxRQUFRLEVBQUVyQixvQkFka0IsRUFBOUI7OztBQWlCRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICd1dGlsaXR5L21pZGRsZXdhcmUvY29tbW9uRGF0YWJhc2VGdW5jdGlvbmFsaXR5LmpzJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZERhdGEoeyB0YXJnZXRQcm9qZWN0Q29uZmlnLCBkYXRhYmFzZURhdGEgfSkge1xuICBsZXQgcmV0aGlua2RiQ29ubmVjdGlvbiA9IGF3YWl0IGNvbm5lY3QocmV0aGlua2RiQ29uZmlnKVxuICBhd2FpdCBsb2FkRGF0YWJhc2VEYXRhKHsgZGF0YWJhc2VEYXRhIH0pXG4gIGF3YWl0IGxvYWRGcm9udGVuZERhdGEoeyB0YXJnZXRDb25maWcsIHJldGhpbmtkYkNvbm5lY3Rpb24gfSkgLy8gaW5pdGlhbGl6ZSB0ZW1wbGF0ZSBkb2N1bWVudCBmcm9udCBlbmQuXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGxvYWRGcm9udGVuZERhdGEoeyB0YXJnZXRDb25maWcsIHJldGhpbmtkYkNvbm5lY3Rpb24gfSkge1xuICBsZXQgZ2V0VGFibGVEb2N1bWVudCA9IHsgZ2VuZXJhdGU6IGdldFRhYmxlRG9jdW1lbnREZWZhdWx0LCBpbnN0YW5jZTogW10gfVxuICBnZXRUYWJsZURvY3VtZW50Lmluc3RhbmNlWyd0ZW1wbGF0ZV9kb2N1bWVudEZyb250ZW5kJ10gPSBhd2FpdCBnZXRUYWJsZURvY3VtZW50LmdlbmVyYXRlKCd3ZWJhcHBTZXR0aW5nJywgJ3RlbXBsYXRlX2RvY3VtZW50RnJvbnRlbmQnKVxuICBjb25zdCBkb2N1bWVudEZyb250ZW5kRGF0YSA9IGF3YWl0IGdldFRhYmxlRG9jdW1lbnQuaW5zdGFuY2VbJ3RlbXBsYXRlX2RvY3VtZW50RnJvbnRlbmQnXSh0YXJnZXRDb25maWcucmV0aGlua2RiQ29ubmVjdGlvbilcbiAgbGV0IGRlZmF1bHRMYW5ndWFnZSA9ICdFbmdsaXNoJ1xuICBsZXQgdWlDb250ZW50ID0gYXdhaXQgcXVlcnlQYXR0ZXJuSW1wbGVtZW50YXRpb24oe1xuICAgIGRhdGFiYXNlQ29ubmVjdGlvbjogcmV0aGlua2RiQ29ubmVjdGlvbixcbiAgICBsYW5ndWFnZURvY3VtZW50S2V5OiBkZWZhdWx0TGFuZ3VhZ2UsXG4gICAgZGF0YVRhYmxlTmFtZTogJ3VpJyxcbiAgfSlcbiAgdGFyZ2V0Q29uZmlnLmZyb250ZW5kU3RhdGljID0ge1xuICAgIC8vIENvbmZpZ3VyYXRpb25zIHBhc3NlZCB0byBmcm9udGVuZFxuICAgIGNvbmZpZzogdGFyZ2V0Q29uZmlnLFxuICAgIHNldHRpbmc6IHtcbiAgICAgIGxvY2F0aW9uOiB7XG4gICAgICAgIHJvdXRlQmFzZVBhdGg6IGAke3RhcmdldENvbmZpZy5QUk9UT0NPTH0ke3RhcmdldENvbmZpZy5IT1NUfWAsXG4gICAgICAgIGNkbkJhc2VQYXRoOiB0YXJnZXRDb25maWcuZXh0ZW5kZWRTdWJjbGFzcy5zdGF0aWNbJ1N0YXRpY0NvbnRlbnQnXS51cmwsXG4gICAgICB9LFxuICAgICAgbW9kZToge1xuICAgICAgICAvLyB2ZXJzaW9uIC8gbW9kZSBvZiBhcHBcbiAgICAgICAgbGFuZ3VhZ2U6IGRlZmF1bHRMYW5ndWFnZSwgLy8gZGVmYXVsdCBsYW5ndWFnZVxuICAgICAgfSxcbiAgICB9LFxuICAgIHJvdXRlOiAncm91dGUnLFxuICAgIGRvY3VtZW50OiBkb2N1bWVudEZyb250ZW5kRGF0YSxcbiAgICAvLyB1aUNvbnRlbnQ6IHVpQ29udGVudFxuICB9XG59XG4iXX0=